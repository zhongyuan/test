# Callback Handler

In order to enhance user interaction experience when viewing web pages, WebView apps need to implement some of WebView callbacks by inheriting WebViewClient and WebChromeClient. They are base classes which have only virtual member functions for GAIA app to implement.

## WebViewClient

WebViewClient helps WebView app to process WebKit notifications and events.

<pre class="prettyprint">

Class MyWebViewClient : public gaia::webkit::WebViewClient {
  public:
    virtual void doUpdateVisitedHistory(const WebView* view,
                const gaia::base::String& url, bool isReload) {
        /**
         * Notify the host application to update its visited links database.
         */
    }

    virtual void onFormResubmission(const WebView* view,
                int32_t policyFunction) {
        /**
         * As the host application if the browser should resend data as the
         * requested page was a result of a POST. The default is to not resend the
         * data.
         */
    }

    virtual void onLoadResource(const WebView* view,
                const gaia::base::String& url) {
        /**
         * Notify the host application that the WebView will load the resource
         * specified by the given url.
         */
    }

    virtual void onPageFinished(const WebView* view,
                const gaia::base::String& url) {
        /**
         * Notify the host application that a page has finished loading. This method
         * is called only for main frame. When onPageFinished() is called, the
         * rendering picture may not be updated yet. To get the notification for the
         * new Picture.
         */
    }
  
     
    ...
}

</pre>

##WebChromeClient

WebChromeClient helps WebView app to handle Javascript dialog box, web icons, website title, loading progress and so on.

<pre class="prettyprint">
Class MyWebChromeClient : public gaia::webkit::WebChromeClient {
  public:
    virtual void onProgressChanged(const WebView* view,
                int32_t newProgress) {
        /**
         * Tell the host application the current progress of loading a page.
         */
    }

    virtual void onReceivedTitle(const WebView* view,
                const gaia::base::String& title) {
        /**
         * Notify the host application of a change in the document title.
         */
    }

    virtual void onReceivedIcon(const WebView* view,
                const gaia::graphics::Bitmap* icon) {
        /**
         * Notify the host application of a new favicon for the current page.
         */
    }
  
     
    ...
}
</pre>
