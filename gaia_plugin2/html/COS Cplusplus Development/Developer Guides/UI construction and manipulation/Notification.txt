Notification
## What is notification  ##

Notification is used to notify the user that there is an event occurs in one application. Some events require the user to respond and others do not. For example:

* there is an event such as a missed call, then a small message should appear to confirm it.
* if the application is running in the background and needs the user's attention, the applicaiton should create a notification that allows the user to repond at his or her convenience.

Look at the follow picture, when a phone is charging, an icon will occur on the status bar promting this event.

<p align="center"><img src="Notification_1.png" width="400"/></p>

what's more, when dragging down the status bar, more informantion will be showing in the expanded status bar view. Please look at the follow picture:

<p align="center"><img src="Notification_2.png" width="400"/></p>

This notification adds an icon on the sytem's status bar and an expanded message in the "Notification" window. When the user selects the expanded message, the system will send an Intent which is definded by the notification. You can also confingure the notification to alert the user with a sound, a vibration, and flashing lights on the device. This notification is idea when your application is working in a background Service and needs to notify the user about an event.

## How to create a notification ##
To creats a notification, you must use two classes: Notification and NotificationManager. Use an instance of Notification class to define the properties of your notification, such as the icon on status bar, the notification message, and extra settings, such as a sound to play. The NotificationMananger is an Cos system service that excutes adn managers all notification. When you want to notify the user, pass it your Notification with notify().

<ol>
<li>Create an instance of NotificationManager</li>

<pre><code>
Context* context_t = new Context(this);
NotificationManager* NM = new gaia::service::NotificationManager(context_t);
</code></pre>

<li>Create an instance of Notification and define its properties</li>

<pre><code>
Notification* N = new gaia::service::Notification(); 
gaia::base::String* ticketText = new gaia::base::String("Notification Test");
N->setIcon(com::gaia::android::psclient::R::drawable::icon_calendar);          // the icon showing on the status bar

N->setFlags(gaia::service::Notification::FLAG_ONGOING_EVENT);
N->setTicketText (*ticketText);                                                // the text showing on the status bar
N->setWhen(0);                                                                 //set the time when showing this notification

gaia::base::String* messageTitle = new gaia::base::String("Testmessage");      // the title of notification in the expanded status bar
gaia::base::String* messageText = new gaia::base::String("Testmessage");       // the content of notificaiton in the expanded status bar

const gaia::base::String *packageName = new gaia::base::String("com.example.preferencestest");
const gaia::base::String* classNameString = new gaia::base::String(".PreferencesTest");
gaia::core::Demand* demand = new gaia::core::Demand();
demand->setClassName(*packageName, *className);
gaia::core::PendingDemand* pendingDemand = gaia::core::PendingDemand::getPage(*context_t, *demand, 0);

N->setLatestEventInfo(*context_t, *messageTitle, *messageText, *pendingDemand);
gaia::base::String* tagString = new gaia::base::String("Notification Test");    //set the tag for notification which will be used as the tag for NotificationManager to notify 
</code><pre>

<li>Use NotificationManager to notify the Notification</li>
<code>
NM->startNotify(*tagString, 1, *N);
</code>
</ol> 
After this, you can post a notification to the status bar, and when you touch it in the expanded status bar view, you will go to the class definding in the PendingDemand.
If you want to post a notification with a sound, a vibrate or flashing light, you could do as follows:
<pre><code>
	N->setDefault(Notification::DEFAULT_SOUND);                                    //set a sound
	N->setDefault(Notification::DEFAULT_VIBRATE);                                  //set a vibrate
	N->setDefault(Notification::DEFAULT_LIGHTS);                                   //set a flash light
</code></pre>
Now you will see a notification with sound, vibrate or flashing light showing on the status bar
